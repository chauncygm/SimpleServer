<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="game.db.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.RoleWithBLOBs">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="game.db.beans.RoleKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="game.db.beans.RoleKey">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.RoleWithBLOBs">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.RoleWithBLOBs">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.Role">
    <result column="data" jdbcType="LONGVARBINARY" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.Role">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.Role">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARBINARY}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="game.db.beans.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="lv" jdbcType="INTEGER" property="lv" />
    <result column="login_time" jdbcType="BIGINT" property="loginTime" />
    <result column="logout_time" jdbcType="BIGINT" property="logoutTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="create_server_id" jdbcType="INTEGER" property="createServerId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="game.db.beans.Role">
    <result column="data" jdbcType="LONGVARCHAR" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, account_id, account, lv, login_time, logout_time, update_time, 
    delete_time, create_server_id
  </sql>
  <sql id="Blob_Column_List">
    data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="game.db.beans.RoleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="game.db.beans.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="game.db.beans.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="game.db.beans.Role">
    insert into role (role_id, role_name, account_id, 
      account, lv, login_time, 
      logout_time, update_time, delete_time, 
      create_server_id, data)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT}, 
      #{account,jdbcType=VARCHAR}, #{lv,jdbcType=INTEGER}, #{loginTime,jdbcType=BIGINT}, 
      #{logoutTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{createServerId,jdbcType=INTEGER}, #{data,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="game.db.beans.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="lv != null">
        lv,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="logoutTime != null">
        logout_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="createServerId != null">
        create_server_id,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="game.db.beans.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.lv != null">
        lv = #{record.lv,jdbcType=INTEGER},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoutTime != null">
        logout_time = #{record.logoutTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.createServerId != null">
        create_server_id = #{record.createServerId,jdbcType=INTEGER},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER},
      data = #{record.data,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      lv = #{record.lv,jdbcType=INTEGER},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      logout_time = #{record.logoutTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      create_server_id = #{record.createServerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="game.db.beans.Role">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="lv != null">
        lv = #{lv,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="logoutTime != null">
        logout_time = #{logoutTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="createServerId != null">
        create_server_id = #{createServerId,jdbcType=INTEGER},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER},
      data = #{data,jdbcType=LONGVARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="game.db.beans.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account = #{account,jdbcType=VARCHAR},
      lv = #{lv,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=BIGINT},
      logout_time = #{logoutTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT},
      create_server_id = #{createServerId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>